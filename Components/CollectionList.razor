@typeparam TItem

@inherits RTBComponent

@using Microsoft.AspNetCore.Components.Web.Virtualization
@using RTB.BlazorUI.Components
@using RTB.BlazorUI.Extensions
@using RTB.BlazorUI.Helper

@code {
    [Parameter] public List<TItem> Items { get; set; } = [];
    [Parameter] public RenderFragment<TItem>? ChildContent {get; set; }
    [Parameter] public RenderFragment? HeaderTemplate { get; set; }

    [Parameter] public string Orientation { get; set; } = "vertical";
    [Parameter] public bool IsHorizontal { get; set; } = false;
    [Parameter] public bool IsVertical { get; set; } = false;

    /// <summary>
    /// Defines how many Items should be visible before it become scrollable.
    /// </summary>
    [Parameter] public int? LimitToItemAmount { get; set; }
}

<Styled Context="ComponentClass">
    <FlexLayout
        Row="@IsHorizontal"
        Column="@IsVertical"
        Class="@ClassBuilder.Create("CollectionList", ComponentClass, Class).Build()"
        @attributes="@CapturedAttributes"
    >
        @if (Items.Any())
        {
            <Virtualize Items="@Items" Context="item">
                @ChildContent?.Invoke(item)
            </Virtualize>
        }
    </FlexLayout>
</Styled>
@typeparam TItem

@inherits RTBComponent

@using Microsoft.AspNetCore.Components.Web.Virtualization
@using RTB.BlazorUI.Components
@using RTB.BlazorUI.Extensions
@using RTB.BlazorUI.Helper

@code {
    [Parameter] public bool IsHorizontal { get; set; } = false;
    [Parameter] public bool IsVertical { get; set; } = false;
    [Parameter] public List<TItem> Items { get; set; } = [];
    [Parameter] public RenderFragment<TItem>? ChildContent {get; set; }
    [Parameter] public RenderFragment? HeaderTemplate { get; set; }
}

<Styled @bind-Classname="ComponentClass">

</Styled>

<FlexLayout Direction="@(IsHorizontal ? FlexLayout.FlexDirectionEnum.Row : FlexLayout.FlexDirectionEnum.Column)">
    <div class="@ComponentClass @(CapturedAttributes.GetValueOrDefault<string>("class"))"
        @attributes="@(CapturedAttributes.Without("class"))">
        @if (Items.Any())
        {
            <Virtualize Items="@Items" Context="item">
                @ChildContent?.Invoke(item)
            </Virtualize>
        }
    </div>
</FlexLayout>
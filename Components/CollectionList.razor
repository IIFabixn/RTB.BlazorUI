@typeparam TItem

@inherits RTBComponent

@using Microsoft.AspNetCore.Components.Web.Virtualization
@using RTB.BlazorUI.Components
@using RTB.BlazorUI.Extensions
@using RTB.BlazorUI.Helper

@code {
    [Parameter] public List<TItem> Items { get; set; } = [];
    [Parameter] public RenderFragment? HeaderTemplate { get; set; }
    [Parameter] public RenderFragment<TItem>? ItemTemplate {get; set; }

    [Parameter] public string Orientation { get; set; } = "vertical";
    [Parameter] public bool Horizontal { get; set; } = false;
    [Parameter] public bool Vertical { get; set; } = false;

    [Parameter] public bool Virtualize { get; set; }
}

<Stack
    Horizontal="@Horizontal"
    Vertical="@Vertical"
    Class="@ClassBuilder.Create("CollectionList", Class).Build()"
    @attributes="@CapturedAttributes"
>
    @if (Items.Any())
    {
        <Virtualize Items="@Items" Context="item">
            @ItemTemplate?.Invoke(item)
        </Virtualize>
    }
</Stack>
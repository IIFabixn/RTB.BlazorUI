@using RTB.BlazorUI.Extensions
@using RTB.BlazorUI.Helper
@inherits RTBComponent

@code {
    [Parameter]
    public RenderFragment? Header { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public bool InitialExpanded { get; set; } = false;

    [Parameter]
    public EventCallback<bool>? ExpandedChanged { get; set; }
}

<Stack Column Class="@ClassBuilder.Create("ExpansionPanel", Class).Build()" @attributes="@CapturedAttributes">
    <Stack Row Class="gap-2">
        @Header

        <button @onclick="Toggle">
            @if (isExpanded)
            {
                <span>Collapse</span>
            }
            else
            {
                <span>Expand</span>
            }
        </button>
    </Stack>
    <div class="@(isExpanded ? "visible" : "collapse")">
        @ChildContent
    </div>
</Stack>

@code{
    private bool isExpanded = false;

    private void Toggle()
    {
        SetProperty(ref isExpanded, !isExpanded);
        ExpandedChanged?.InvokeAsync(isExpanded);
    }
}

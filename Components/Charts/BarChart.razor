@using SkiaSharp
@using SkiaSharp.Views.Blazor

@inherits ChartBase

<Grid Rows="1fr auto" Class="w-full">
    <GridItem>
        <SKCanvasView class="h-full w-full" OnPaintSurface="PaintBars" EnableRenderLoop />
    </GridItem>
    <GridItem>
        <Stack Horizontal Class="items-center gap-2 flex-wrap">
            @foreach (var entry in Entries)
            {
                <Stack Horizontal Class="items-center justify-center gap-2">
                    <div class="w-2 h-2 rounded" style="background-color: #@(entry.Color?.ToString().Substring(3));"></div>
                    <h4>@entry.Label</h4>
                </Stack>
            }
        </Stack>
    </GridItem>
</Grid>

@code {
    private void PaintBars(SKPaintSurfaceEventArgs args)
    {
        var canvas = args.Surface.Canvas;
        canvas.Clear(SKColors.White);
        var info = args.Info;
        float margin = 40;
        float barW = (info.Width - 2 * margin) / (Entries.Count * 2f);

        using var paint = new SKPaint { IsAntialias = true };

        for (int i = 0; i < Entries.Count; i++)
        {
            float h = (Entries[i].Value / MaxValue) * (info.Height - 2 * margin);
            float x = margin + barW * (1 + 2 * i);
            float y = info.Height - margin - h;

            paint.Color = Entries[i].Color ?? SKColors.Red;
            canvas.DrawRoundRect(x, y, barW, h, 6, 6, paint);
        }
    }
}
@using RTB.BlazorUI.Extensions
@using RTB.BlazorUI.Helper
@using static RTB.BlazorUI.Helper.CssHelper

@inherits RTBComponent

@code {
    [Parameter] public RenderFragment ChildContent { get; set; } = default!;

    [Parameter] public bool Row { get; set; } = false;
    [Parameter] public bool Column { get; set; } = false;
    [Parameter] public bool Reverse { get; set; } = false;

    [Parameter] public string? Gap { get; set; }

    [Parameter] public string? AlignItem { get; set; }
    [Parameter] public string? JustifyContent { get; set; }

    [Parameter] public int? Shrink { get; set; }
    [Parameter] public int? Grow { get; set; }
}

<Styled Context="ComponentClass">
    <FlexDisplay 
        Direction="@GetDirection()" 
        Gap="@Gap" 
        AlignItems="@AlignItem"
        JustifyContent="@JustifyContent"
        Shrink="@Shrink" 
        Grow="@Grow"
    />
    
    <div class="@ClassBuilder.Create("FlexLayout", ComponentClass, Class).Build()" @attributes="@CapturedAttributes">
        @ChildContent
    </div>
</Styled>

@code {
    private string? GetDirection()
    {
        return (Row, Column, Reverse) switch
        {
            (true, false, false) => "row",
            (false, true, false) => "column",
            (true, false, true) => "row-reverse",
            (false, true, true) => "column-reverse",
            _ => null
        };
    }
}
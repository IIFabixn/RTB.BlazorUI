@using RTB.BlazorUI.Extensions

@inherits RTBComponent

@code {
    [Parameter, EditorRequired] public RenderFragment ActionContent { get; set; } = default!;
    [Parameter, EditorRequired] public RenderFragment ChildContent { get; set; } = default!;

    private string _isVisible = "collapse";
    private string Visibility
    {
        get => _isVisible;
        set => SetProperty(ref _isVisible, value);
    }
}

<Styled Context="ComponentClass">
    <Other Property="position" Value="relative" />
    <Other Property="display" Value="inline-block" />
    <Other Property="cursor" Value="pointer" />
    <Other Property="z-index" Value="10" />

    <div class="@ComponentClass group @(Class)" 
        @attributes="@(CapturedAttributes)" 
        @onmouseover="@(() => Visibility = "visible")"
        @onmouseout="@(() => Visibility = "collapse")"
    >
        @ActionContent

        <Styled Context="ChildContentClass">
            <Other Property="position" Value="absolute" />
            <Positioned Top="100%" Left="50%" />
            <Other Property="transform" Value="translateX(-50%)" />
            <Other Property="z-index" Value="20" />
            <Other Property="visibility" Value="@Visibility" />
            <Transition Property="visibility" Duration="0.2s" TimingFunction="ease-in-out" />
            <Size MinWidth="100%" />
            
            <div class="@ChildContentClass">
                @ChildContent
            </div>
        </Styled>
    </div>
</Styled>
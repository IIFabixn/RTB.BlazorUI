@using RTB.BlazorUI.Extensions
@using RTB.BlazorUI.Helper
@using RTB.BlazorUI.Services.Theme
@using RTB.BlazorUI.Services.Theme.Styles

@inherits RTBComponent

@code {
    [Parameter] public RenderFragment ChildContent { get; set; } = default!;
    [Parameter] public string? Title { get; set; }

    [Parameter] public CardStyle CardStyle { get; set; } = new();

    [Parameter] public RTBSpacing? HeaderPadding { get; set; }
    [Parameter] public string? CorderRadius { get; set; }
    [Parameter] public string? HeaderBorder { get; set; }
}

<Styled @bind-Classname="@ComponentClass">
    @(RTBStyle.Build())
    border-radius: @(CorderRadius ?? CardStyle.CorderRadius);

    .header {
        width: 100%;
        padding: @(HeaderPadding ?? CardStyle.HeaderPadding);
        @(HeaderBorder is not null ? "border:" : string.Empty)
    }
</Styled>

<div class="Card @ComponentClass @(CapturedAttributes?.GetValueOrDefault<string>("class"))"
    @attributes="@CapturedAttributes?.Without("class", "style")">
    <FlexLayout FullHeight IsVertical AlignItem="@CssHelper.AlignItems.Center">
        @if (!string.IsNullOrEmpty(Title))
        {
            <div class="header">
                @Title
            </div>
        }

        @ChildContent
    </FlexLayout>
</div>

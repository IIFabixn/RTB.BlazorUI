@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components.Forms
@using RTB.BlazorUI.Components
@using System.Diagnostics

@inject IJSRuntime JSRuntime

@inherits RTBComponent

@code {
    [Parameter] public string[] AcceptedTypes { get; set; } = [];
    [Parameter, EditorRequired] public string Id { get; set; } = string.Empty;
    [Parameter] public EventCallback<IBrowserFile[]> OnInput { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; } = default!;
    [Parameter] public bool Multiple { get; set; } = false;
}

<InputFile id="@Id" OnChange="HandleChange" multiple="@Multiple" hidden accept="@(string.Join(",", AcceptedTypes))" />
<label id="@(Id)Zone"
    for="@Id"
    class="@Class">
    @ChildContent
</label>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initDragDropInterop", $"{Id}Zone", Id);        
        }
    }

    private async Task HandleChange(InputFileChangeEventArgs args)
    {
        var files = args.GetMultipleFiles(args.FileCount)
                        .Where(f => AcceptedTypes.Length == 0 || AcceptedTypes.Any(t => f.ContentType.Equals(t, StringComparison.OrdinalIgnoreCase)))
                        .ToArray();

        if (files.Length == 0)
        {
            Debug.WriteLine("Dropped content was not a supported file type.");
            return;
        }

        if (OnInput.HasDelegate)
        {
            await OnInput.InvokeAsync(files);
        }
    }
}
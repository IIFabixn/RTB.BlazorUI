@using RTB.BlazorUI.Helper
@using RTB.BlazorUI.Services.Style

@inherits RTBComponent

@inject IStyleRegistry Registry

@code {
    [Parameter] public RenderFragment<string?> ChildContent { get; set; } = default!;
    [Parameter] public string RawStyle { get; set; } = string.Empty;
    
    private string _class = string.Empty;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
}

@{
    _class = Registry.GetOrAdd(RawStyle);
}
<CascadingValue Value="(IStyleAppender)new Appender(_class, Registry)">
    @Style
</CascadingValue>

@ChildContent(_class)

@code {
    private sealed record Appender(string cls, IStyleRegistry Reg) : IStyleAppender
    {
        public void Append(string decls)
        => Reg.Append(cls, decls.TrimEnd(';') + ';');
    }
}
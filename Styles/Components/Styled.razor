@using RTB.BlazorUI.Helper
@using RTB.BlazorUI.Services.Style

@inject IStyleRegistry Registry

@code {
    [Parameter] public RenderFragment<string?> ChildContent { get; set; } = default!;

    private readonly StyleBuilder _builder = StyleBuilder.Start;

    [Parameter] public string? Classname { get; set; }
    [Parameter] public EventCallback<string>? ClassnameChanged { get; set; }

    [Parameter] public string? Media { get; set; }
}

@{_builder.Clear();}

<CascadingValue Value="@_builder">
    @ChildContent(Classname)
</CascadingValue>

@code {
    protected override void OnAfterRender(bool firstRender)
    {
        string cls = Registry.GetOrAdd(_builder.Build(Media));

        if (!string.IsNullOrEmpty(cls) && cls != Classname)
        {
            Classname = cls;
            ClassnameChanged?.InvokeAsync(Classname);
            StateHasChanged();
        }
    }
}

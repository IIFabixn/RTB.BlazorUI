@using RTB.BlazorUI.Helper
@using RTB.BlazorUI.Services.Style

@inject IStyleRegistry Registry

@code {
    [Parameter] public RenderFragment<string?> ChildContent { get; set; } = default!;

    [Parameter] public string? Classname { get; set; }
    [Parameter] public EventCallback<string>? ClassnameChanged { get; set; }

    [Parameter] public string? Media { get; set; }
}

<CascadingValue Value="@Classname" IsFixed>
    @ChildContent(Classname)
</CascadingValue>

@code {
    protected override void OnParametersSet()
    {
        if (string.IsNullOrEmpty(Classname))
        {
            Classname = Registry.Create();
        }
    }

    @* protected override void OnAfterRender(bool firstRender)
    {
        string cls = Registry.GetOrAdd(_builder.Build(Media));

        if (!string.IsNullOrEmpty(cls) && cls != Classname)
        {
            Classname = cls;
            ClassnameChanged?.InvokeAsync(Classname);
            StateHasChanged();
        }
    } *@
}

### YamlMime:ManagedReference
items:
- uid: RTB.Blazor.Styled.Helper.SizeExpression
  commentId: T:RTB.Blazor.Styled.Helper.SizeExpression
  id: SizeExpression
  parent: RTB.Blazor.Styled.Helper
  children:
  - RTB.Blazor.Styled.Helper.SizeExpression.Render
  - RTB.Blazor.Styled.Helper.SizeExpression.ToString
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Addition(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Division(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Division(RTB.Blazor.Styled.Helper.SizeExpression,System.Double)
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Division(RTB.Blazor.Styled.Helper.SizeExpression,System.Int32)
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Division(System.Double,RTB.Blazor.Styled.Helper.SizeExpression)
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Division(System.Int32,RTB.Blazor.Styled.Helper.SizeExpression)
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(RTB.Blazor.Styled.Helper.SizeExpression)~System.String
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(RTB.Blazor.Styled.Helper.SizeUnit)~RTB.Blazor.Styled.Helper.SizeExpression
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(System.Double)~RTB.Blazor.Styled.Helper.SizeExpression
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(System.Int32)~RTB.Blazor.Styled.Helper.SizeExpression
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(System.String)~RTB.Blazor.Styled.Helper.SizeExpression
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(RTB.Blazor.Styled.Helper.SizeExpression,System.Double)
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(RTB.Blazor.Styled.Helper.SizeExpression,System.Int32)
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(System.Double,RTB.Blazor.Styled.Helper.SizeExpression)
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(System.Int32,RTB.Blazor.Styled.Helper.SizeExpression)
  - RTB.Blazor.Styled.Helper.SizeExpression.op_Subtraction(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  langs:
  - csharp
  - vb
  name: SizeExpression
  nameWithType: SizeExpression
  fullName: RTB.Blazor.Styled.Helper.SizeExpression
  type: Class
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: SizeExpression
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 252
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Base class for size expressions.
  remarks: >-
    Instances render to valid CSS via <xref href="RTB.Blazor.Styled.Helper.SizeExpression.ToString" data-throw-if-not-resolved="false"></xref> or <xref href="RTB.Blazor.Styled.Helper.SizeExpression.Render" data-throw-if-not-resolved="false"></xref>.

    Use operators to compose expressions; the output is wrapped in CSS calc().
  example: []
  syntax:
    content: 'public abstract record SizeExpression : IEquatable<SizeExpression>'
    content.vb: Public MustInherit Class SizeExpression Implements IEquatable(Of SizeExpression)
  inheritance:
  - System.Object
  derivedClasses:
  - RTB.Blazor.Styled.Helper.BinarySizeExpression
  - RTB.Blazor.Styled.Helper.NumericLiteral
  - RTB.Blazor.Styled.Helper.RawLiteral
  - RTB.Blazor.Styled.Helper.SizeLiteral
  implements:
  - System.IEquatable{RTB.Blazor.Styled.Helper.SizeExpression}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(RTB.Blazor.Styled.Helper.SizeUnit)~RTB.Blazor.Styled.Helper.SizeExpression
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(RTB.Blazor.Styled.Helper.SizeUnit)~RTB.Blazor.Styled.Helper.SizeExpression
  id: op_Implicit(RTB.Blazor.Styled.Helper.SizeUnit)~RTB.Blazor.Styled.Helper.SizeExpression
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: implicit operator SizeExpression(SizeUnit)
  nameWithType: SizeExpression.implicit operator SizeExpression(SizeUnit)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.implicit operator RTB.Blazor.Styled.Helper.SizeExpression(RTB.Blazor.Styled.Helper.SizeUnit)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Implicit
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 257
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Implicitly converts a <xref href="RTB.Blazor.Styled.Helper.SizeUnit" data-throw-if-not-resolved="false"></xref> to a <xref href="RTB.Blazor.Styled.Helper.SizeExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator SizeExpression(SizeUnit unit)
    parameters:
    - id: unit
      type: RTB.Blazor.Styled.Helper.SizeUnit
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Widening Operator CType(unit As SizeUnit) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit*
  nameWithType.vb: SizeExpression.CType(SizeUnit)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.CType(RTB.Blazor.Styled.Helper.SizeUnit)
  name.vb: CType(SizeUnit)
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(System.String)~RTB.Blazor.Styled.Helper.SizeExpression
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(System.String)~RTB.Blazor.Styled.Helper.SizeExpression
  id: op_Implicit(System.String)~RTB.Blazor.Styled.Helper.SizeExpression
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: implicit operator SizeExpression(string)
  nameWithType: SizeExpression.implicit operator SizeExpression(string)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.implicit operator RTB.Blazor.Styled.Helper.SizeExpression(string)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Implicit
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 262
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Implicitly converts a CSS size literal to a <xref href="RTB.Blazor.Styled.Helper.SizeExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator SizeExpression(string litteral)
    parameters:
    - id: litteral
      type: System.String
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Widening Operator CType(litteral As String) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit*
  nameWithType.vb: SizeExpression.CType(String)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.CType(String)
  name.vb: CType(String)
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(System.Int32)~RTB.Blazor.Styled.Helper.SizeExpression
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(System.Int32)~RTB.Blazor.Styled.Helper.SizeExpression
  id: op_Implicit(System.Int32)~RTB.Blazor.Styled.Helper.SizeExpression
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: implicit operator SizeExpression(int)
  nameWithType: SizeExpression.implicit operator SizeExpression(int)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.implicit operator RTB.Blazor.Styled.Helper.SizeExpression(int)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Implicit
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 267
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Implicitly converts an integer to a pixel <xref href="RTB.Blazor.Styled.Helper.SizeExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator SizeExpression(int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Widening Operator CType(value As Integer) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit*
  nameWithType.vb: SizeExpression.CType(Integer)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.CType(Integer)
  name.vb: CType(Integer)
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(System.Double)~RTB.Blazor.Styled.Helper.SizeExpression
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(System.Double)~RTB.Blazor.Styled.Helper.SizeExpression
  id: op_Implicit(System.Double)~RTB.Blazor.Styled.Helper.SizeExpression
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: implicit operator SizeExpression(double)
  nameWithType: SizeExpression.implicit operator SizeExpression(double)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.implicit operator RTB.Blazor.Styled.Helper.SizeExpression(double)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Implicit
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 272
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Implicitly converts a double to a pixel <xref href="RTB.Blazor.Styled.Helper.SizeExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator SizeExpression(double value)
    parameters:
    - id: value
      type: System.Double
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Widening Operator CType(value As Double) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit*
  nameWithType.vb: SizeExpression.CType(Double)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.CType(Double)
  name.vb: CType(Double)
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Addition(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Addition(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  id: op_Addition(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: operator +(SizeExpression, SizeExpression)
  nameWithType: SizeExpression.operator +(SizeExpression, SizeExpression)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator +(RTB.Blazor.Styled.Helper.SizeExpression, RTB.Blazor.Styled.Helper.SizeExpression)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Addition
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 277
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Adds two expressions into a CSS calc() expression.
  example: []
  syntax:
    content: public static SizeExpression operator +(SizeExpression a, SizeExpression b)
    parameters:
    - id: a
      type: RTB.Blazor.Styled.Helper.SizeExpression
    - id: b
      type: RTB.Blazor.Styled.Helper.SizeExpression
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Operator +(a As SizeExpression, b As SizeExpression) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Addition*
  nameWithType.vb: SizeExpression.+(SizeExpression, SizeExpression)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.+(RTB.Blazor.Styled.Helper.SizeExpression, RTB.Blazor.Styled.Helper.SizeExpression)
  name.vb: +(SizeExpression, SizeExpression)
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Subtraction(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Subtraction(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  id: op_Subtraction(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: operator -(SizeExpression, SizeExpression)
  nameWithType: SizeExpression.operator -(SizeExpression, SizeExpression)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator -(RTB.Blazor.Styled.Helper.SizeExpression, RTB.Blazor.Styled.Helper.SizeExpression)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Subtraction
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 282
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Subtracts two expressions into a CSS calc() expression.
  example: []
  syntax:
    content: public static SizeExpression operator -(SizeExpression a, SizeExpression b)
    parameters:
    - id: a
      type: RTB.Blazor.Styled.Helper.SizeExpression
    - id: b
      type: RTB.Blazor.Styled.Helper.SizeExpression
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Operator -(a As SizeExpression, b As SizeExpression) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Subtraction*
  nameWithType.vb: SizeExpression.-(SizeExpression, SizeExpression)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.-(RTB.Blazor.Styled.Helper.SizeExpression, RTB.Blazor.Styled.Helper.SizeExpression)
  name.vb: -(SizeExpression, SizeExpression)
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(RTB.Blazor.Styled.Helper.SizeExpression,System.Int32)
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(RTB.Blazor.Styled.Helper.SizeExpression,System.Int32)
  id: op_Multiply(RTB.Blazor.Styled.Helper.SizeExpression,System.Int32)
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: operator *(SizeExpression, int)
  nameWithType: SizeExpression.operator *(SizeExpression, int)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator *(RTB.Blazor.Styled.Helper.SizeExpression, int)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Multiply
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 287
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Multiplies an expression by a numeric literal into a CSS calc() expression.
  example: []
  syntax:
    content: public static SizeExpression operator *(SizeExpression a, int b)
    parameters:
    - id: a
      type: RTB.Blazor.Styled.Helper.SizeExpression
    - id: b
      type: System.Int32
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Operator *(a As SizeExpression, b As Integer) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply*
  nameWithType.vb: SizeExpression.*(SizeExpression, Integer)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.*(RTB.Blazor.Styled.Helper.SizeExpression, Integer)
  name.vb: '*(SizeExpression, Integer)'
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(System.Int32,RTB.Blazor.Styled.Helper.SizeExpression)
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(System.Int32,RTB.Blazor.Styled.Helper.SizeExpression)
  id: op_Multiply(System.Int32,RTB.Blazor.Styled.Helper.SizeExpression)
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: operator *(int, SizeExpression)
  nameWithType: SizeExpression.operator *(int, SizeExpression)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator *(int, RTB.Blazor.Styled.Helper.SizeExpression)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Multiply
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 292
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Multiplies an expression by a numeric literal into a CSS calc() expression.
  example: []
  syntax:
    content: public static SizeExpression operator *(int a, SizeExpression b)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: RTB.Blazor.Styled.Helper.SizeExpression
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Operator *(a As Integer, b As SizeExpression) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply*
  nameWithType.vb: SizeExpression.*(Integer, SizeExpression)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.*(Integer, RTB.Blazor.Styled.Helper.SizeExpression)
  name.vb: '*(Integer, SizeExpression)'
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(RTB.Blazor.Styled.Helper.SizeExpression,System.Double)
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(RTB.Blazor.Styled.Helper.SizeExpression,System.Double)
  id: op_Multiply(RTB.Blazor.Styled.Helper.SizeExpression,System.Double)
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: operator *(SizeExpression, double)
  nameWithType: SizeExpression.operator *(SizeExpression, double)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator *(RTB.Blazor.Styled.Helper.SizeExpression, double)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Multiply
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 297
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Multiplies an expression by a numeric literal into a CSS calc() expression.
  example: []
  syntax:
    content: public static SizeExpression operator *(SizeExpression a, double b)
    parameters:
    - id: a
      type: RTB.Blazor.Styled.Helper.SizeExpression
    - id: b
      type: System.Double
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Operator *(a As SizeExpression, b As Double) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply*
  nameWithType.vb: SizeExpression.*(SizeExpression, Double)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.*(RTB.Blazor.Styled.Helper.SizeExpression, Double)
  name.vb: '*(SizeExpression, Double)'
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(System.Double,RTB.Blazor.Styled.Helper.SizeExpression)
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(System.Double,RTB.Blazor.Styled.Helper.SizeExpression)
  id: op_Multiply(System.Double,RTB.Blazor.Styled.Helper.SizeExpression)
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: operator *(double, SizeExpression)
  nameWithType: SizeExpression.operator *(double, SizeExpression)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator *(double, RTB.Blazor.Styled.Helper.SizeExpression)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Multiply
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 302
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Multiplies an expression by a numeric literal into a CSS calc() expression.
  example: []
  syntax:
    content: public static SizeExpression operator *(double a, SizeExpression b)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: RTB.Blazor.Styled.Helper.SizeExpression
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Operator *(a As Double, b As SizeExpression) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply*
  nameWithType.vb: SizeExpression.*(Double, SizeExpression)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.*(Double, RTB.Blazor.Styled.Helper.SizeExpression)
  name.vb: '*(Double, SizeExpression)'
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  id: op_Multiply(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: operator *(SizeExpression, SizeExpression)
  nameWithType: SizeExpression.operator *(SizeExpression, SizeExpression)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator *(RTB.Blazor.Styled.Helper.SizeExpression, RTB.Blazor.Styled.Helper.SizeExpression)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Multiply
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 307
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Multiplies two expressions into a CSS calc() expression.
  example: []
  syntax:
    content: public static SizeExpression operator *(SizeExpression a, SizeExpression b)
    parameters:
    - id: a
      type: RTB.Blazor.Styled.Helper.SizeExpression
    - id: b
      type: RTB.Blazor.Styled.Helper.SizeExpression
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Operator *(a As SizeExpression, b As SizeExpression) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply*
  nameWithType.vb: SizeExpression.*(SizeExpression, SizeExpression)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.*(RTB.Blazor.Styled.Helper.SizeExpression, RTB.Blazor.Styled.Helper.SizeExpression)
  name.vb: '*(SizeExpression, SizeExpression)'
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Division(RTB.Blazor.Styled.Helper.SizeExpression,System.Int32)
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Division(RTB.Blazor.Styled.Helper.SizeExpression,System.Int32)
  id: op_Division(RTB.Blazor.Styled.Helper.SizeExpression,System.Int32)
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: operator /(SizeExpression, int)
  nameWithType: SizeExpression.operator /(SizeExpression, int)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator /(RTB.Blazor.Styled.Helper.SizeExpression, int)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Division
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 312
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Divides an expression by a numeric literal into a CSS calc() expression.
  example: []
  syntax:
    content: public static SizeExpression operator /(SizeExpression a, int b)
    parameters:
    - id: a
      type: RTB.Blazor.Styled.Helper.SizeExpression
    - id: b
      type: System.Int32
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Operator /(a As SizeExpression, b As Integer) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Division*
  nameWithType.vb: SizeExpression./(SizeExpression, Integer)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression./(RTB.Blazor.Styled.Helper.SizeExpression, Integer)
  name.vb: /(SizeExpression, Integer)
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Division(System.Int32,RTB.Blazor.Styled.Helper.SizeExpression)
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Division(System.Int32,RTB.Blazor.Styled.Helper.SizeExpression)
  id: op_Division(System.Int32,RTB.Blazor.Styled.Helper.SizeExpression)
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: operator /(int, SizeExpression)
  nameWithType: SizeExpression.operator /(int, SizeExpression)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator /(int, RTB.Blazor.Styled.Helper.SizeExpression)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Division
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 317
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Divides a numeric literal by an expression into a CSS calc() expression.
  example: []
  syntax:
    content: public static SizeExpression operator /(int a, SizeExpression b)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: RTB.Blazor.Styled.Helper.SizeExpression
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Operator /(a As Integer, b As SizeExpression) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Division*
  nameWithType.vb: SizeExpression./(Integer, SizeExpression)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression./(Integer, RTB.Blazor.Styled.Helper.SizeExpression)
  name.vb: /(Integer, SizeExpression)
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Division(RTB.Blazor.Styled.Helper.SizeExpression,System.Double)
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Division(RTB.Blazor.Styled.Helper.SizeExpression,System.Double)
  id: op_Division(RTB.Blazor.Styled.Helper.SizeExpression,System.Double)
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: operator /(SizeExpression, double)
  nameWithType: SizeExpression.operator /(SizeExpression, double)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator /(RTB.Blazor.Styled.Helper.SizeExpression, double)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Division
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 322
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Divides an expression by a numeric literal into a CSS calc() expression.
  example: []
  syntax:
    content: public static SizeExpression operator /(SizeExpression a, double b)
    parameters:
    - id: a
      type: RTB.Blazor.Styled.Helper.SizeExpression
    - id: b
      type: System.Double
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Operator /(a As SizeExpression, b As Double) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Division*
  nameWithType.vb: SizeExpression./(SizeExpression, Double)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression./(RTB.Blazor.Styled.Helper.SizeExpression, Double)
  name.vb: /(SizeExpression, Double)
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Division(System.Double,RTB.Blazor.Styled.Helper.SizeExpression)
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Division(System.Double,RTB.Blazor.Styled.Helper.SizeExpression)
  id: op_Division(System.Double,RTB.Blazor.Styled.Helper.SizeExpression)
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: operator /(double, SizeExpression)
  nameWithType: SizeExpression.operator /(double, SizeExpression)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator /(double, RTB.Blazor.Styled.Helper.SizeExpression)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Division
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 327
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Divides a numeric literal by an expression into a CSS calc() expression.
  example: []
  syntax:
    content: public static SizeExpression operator /(double a, SizeExpression b)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: RTB.Blazor.Styled.Helper.SizeExpression
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Operator /(a As Double, b As SizeExpression) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Division*
  nameWithType.vb: SizeExpression./(Double, SizeExpression)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression./(Double, RTB.Blazor.Styled.Helper.SizeExpression)
  name.vb: /(Double, SizeExpression)
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Division(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Division(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  id: op_Division(RTB.Blazor.Styled.Helper.SizeExpression,RTB.Blazor.Styled.Helper.SizeExpression)
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: operator /(SizeExpression, SizeExpression)
  nameWithType: SizeExpression.operator /(SizeExpression, SizeExpression)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator /(RTB.Blazor.Styled.Helper.SizeExpression, RTB.Blazor.Styled.Helper.SizeExpression)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Division
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 332
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Divides two expressions into a CSS calc() expression.
  example: []
  syntax:
    content: public static SizeExpression operator /(SizeExpression a, SizeExpression b)
    parameters:
    - id: a
      type: RTB.Blazor.Styled.Helper.SizeExpression
    - id: b
      type: RTB.Blazor.Styled.Helper.SizeExpression
    return:
      type: RTB.Blazor.Styled.Helper.SizeExpression
    content.vb: Public Shared Operator /(a As SizeExpression, b As SizeExpression) As SizeExpression
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Division*
  nameWithType.vb: SizeExpression./(SizeExpression, SizeExpression)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression./(RTB.Blazor.Styled.Helper.SizeExpression, RTB.Blazor.Styled.Helper.SizeExpression)
  name.vb: /(SizeExpression, SizeExpression)
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(RTB.Blazor.Styled.Helper.SizeExpression)~System.String
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit(RTB.Blazor.Styled.Helper.SizeExpression)~System.String
  id: op_Implicit(RTB.Blazor.Styled.Helper.SizeExpression)~System.String
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: implicit operator string?(SizeExpression?)
  nameWithType: SizeExpression.implicit operator string?(SizeExpression?)
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.implicit operator string?(RTB.Blazor.Styled.Helper.SizeExpression?)
  type: Operator
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: op_Implicit
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 337
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Renders the expression to its CSS string representation.
  example: []
  syntax:
    content: public static implicit operator string?(SizeExpression? unit)
    parameters:
    - id: unit
      type: RTB.Blazor.Styled.Helper.SizeExpression
    return:
      type: System.String
    content.vb: Public Shared Widening Operator CType(unit As SizeExpression) As String
  overload: RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit*
  nameWithType.vb: SizeExpression.CType(SizeExpression)
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.CType(RTB.Blazor.Styled.Helper.SizeExpression)
  name.vb: CType(SizeExpression)
- uid: RTB.Blazor.Styled.Helper.SizeExpression.ToString
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.ToString
  id: ToString
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SizeExpression.ToString()
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.ToString()
  type: Method
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: ToString
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 342
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Returns <xref href="RTB.Blazor.Styled.Helper.SizeExpression.Render" data-throw-if-not-resolved="false"></xref> to ensure the expression is emitted as CSS.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: RTB.Blazor.Styled.Helper.SizeExpression.ToString*
- uid: RTB.Blazor.Styled.Helper.SizeExpression.Render
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.Render
  id: Render
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  langs:
  - csharp
  - vb
  name: Render()
  nameWithType: SizeExpression.Render()
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.Render()
  type: Method
  source:
    remote:
      path: src/RTB.Styled/Helper/SizeUnit.cs
      branch: develop
      repo: https://github.com/IIFabixn/RTB.BlazorUI.git
    id: Render
    path: ../src/RTB.Styled/Helper/SizeUnit.cs
    startLine: 347
  assemblies:
  - RTB.Blazor.Styled
  namespace: RTB.Blazor.Styled.Helper
  summary: Renders the expression to CSS.
  example: []
  syntax:
    content: protected abstract string Render()
    return:
      type: System.String
    content.vb: Protected MustOverride Function Render() As String
  overload: RTB.Blazor.Styled.Helper.SizeExpression.Render*
references:
- uid: RTB.Blazor.Styled.Helper.SizeExpression.ToString
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.ToString
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_ToString
  name: ToString()
  nameWithType: SizeExpression.ToString()
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.ToString()
  spec.csharp:
  - uid: RTB.Blazor.Styled.Helper.SizeExpression.ToString
    name: ToString
    href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: RTB.Blazor.Styled.Helper.SizeExpression.ToString
    name: ToString
    href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_ToString
  - name: (
  - name: )
- uid: RTB.Blazor.Styled.Helper.SizeExpression.Render
  commentId: M:RTB.Blazor.Styled.Helper.SizeExpression.Render
  parent: RTB.Blazor.Styled.Helper.SizeExpression
  href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_Render
  name: Render()
  nameWithType: SizeExpression.Render()
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.Render()
  spec.csharp:
  - uid: RTB.Blazor.Styled.Helper.SizeExpression.Render
    name: Render
    href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_Render
  - name: (
  - name: )
  spec.vb:
  - uid: RTB.Blazor.Styled.Helper.SizeExpression.Render
    name: Render
    href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_Render
  - name: (
  - name: )
- uid: RTB.Blazor.Styled.Helper
  commentId: N:RTB.Blazor.Styled.Helper
  href: RTB.html
  name: RTB.Blazor.Styled.Helper
  nameWithType: RTB.Blazor.Styled.Helper
  fullName: RTB.Blazor.Styled.Helper
  spec.csharp:
  - uid: RTB
    name: RTB
    href: RTB.html
  - name: .
  - uid: RTB.Blazor
    name: Blazor
    href: RTB.Blazor.html
  - name: .
  - uid: RTB.Blazor.Styled
    name: Styled
    href: RTB.Blazor.Styled.html
  - name: .
  - uid: RTB.Blazor.Styled.Helper
    name: Helper
    href: RTB.Blazor.Styled.Helper.html
  spec.vb:
  - uid: RTB
    name: RTB
    href: RTB.html
  - name: .
  - uid: RTB.Blazor
    name: Blazor
    href: RTB.Blazor.html
  - name: .
  - uid: RTB.Blazor.Styled
    name: Styled
    href: RTB.Blazor.Styled.html
  - name: .
  - uid: RTB.Blazor.Styled.Helper
    name: Helper
    href: RTB.Blazor.Styled.Helper.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{RTB.Blazor.Styled.Helper.SizeExpression}
  commentId: T:System.IEquatable{RTB.Blazor.Styled.Helper.SizeExpression}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<SizeExpression>
  nameWithType: IEquatable<SizeExpression>
  fullName: System.IEquatable<RTB.Blazor.Styled.Helper.SizeExpression>
  nameWithType.vb: IEquatable(Of SizeExpression)
  fullName.vb: System.IEquatable(Of RTB.Blazor.Styled.Helper.SizeExpression)
  name.vb: IEquatable(Of SizeExpression)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: RTB.Blazor.Styled.Helper.SizeExpression
    name: SizeExpression
    href: RTB.Blazor.Styled.Helper.SizeExpression.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: RTB.Blazor.Styled.Helper.SizeExpression
    name: SizeExpression
    href: RTB.Blazor.Styled.Helper.SizeExpression.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: RTB.Blazor.Styled.Helper.SizeExpression
  commentId: T:RTB.Blazor.Styled.Helper.SizeExpression
  parent: RTB.Blazor.Styled.Helper
  href: RTB.Blazor.Styled.Helper.SizeExpression.html
  name: SizeExpression
  nameWithType: SizeExpression
  fullName: RTB.Blazor.Styled.Helper.SizeExpression
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: RTB.Blazor.Styled.Helper.SizeUnit
  commentId: T:RTB.Blazor.Styled.Helper.SizeUnit
  parent: RTB.Blazor.Styled.Helper
  href: RTB.Blazor.Styled.Helper.SizeUnit.html
  name: SizeUnit
  nameWithType: SizeUnit
  fullName: RTB.Blazor.Styled.Helper.SizeUnit
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit*
  commentId: Overload:RTB.Blazor.Styled.Helper.SizeExpression.op_Implicit
  name: implicit operator
  nameWithType: SizeExpression.implicit operator
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.implicit operator
  nameWithType.vb: SizeExpression.CType
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Addition*
  commentId: Overload:RTB.Blazor.Styled.Helper.SizeExpression.op_Addition
  href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_op_Addition_RTB_Blazor_Styled_Helper_SizeExpression_RTB_Blazor_Styled_Helper_SizeExpression_
  name: operator +
  nameWithType: SizeExpression.operator +
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator +
  nameWithType.vb: SizeExpression.+
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Addition*
    name: +
    href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_op_Addition_RTB_Blazor_Styled_Helper_SizeExpression_RTB_Blazor_Styled_Helper_SizeExpression_
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Subtraction*
  commentId: Overload:RTB.Blazor.Styled.Helper.SizeExpression.op_Subtraction
  href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_op_Subtraction_RTB_Blazor_Styled_Helper_SizeExpression_RTB_Blazor_Styled_Helper_SizeExpression_
  name: operator -
  nameWithType: SizeExpression.operator -
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator -
  nameWithType.vb: SizeExpression.-
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Subtraction*
    name: '-'
    href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_op_Subtraction_RTB_Blazor_Styled_Helper_SizeExpression_RTB_Blazor_Styled_Helper_SizeExpression_
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply*
  commentId: Overload:RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply
  href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_op_Multiply_RTB_Blazor_Styled_Helper_SizeExpression_System_Int32_
  name: operator *
  nameWithType: SizeExpression.operator *
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator *
  nameWithType.vb: SizeExpression.*
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Multiply*
    name: '*'
    href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_op_Multiply_RTB_Blazor_Styled_Helper_SizeExpression_System_Int32_
- uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Division*
  commentId: Overload:RTB.Blazor.Styled.Helper.SizeExpression.op_Division
  href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_op_Division_RTB_Blazor_Styled_Helper_SizeExpression_System_Int32_
  name: operator /
  nameWithType: SizeExpression.operator /
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.operator /
  nameWithType.vb: SizeExpression./
  fullName.vb: RTB.Blazor.Styled.Helper.SizeExpression./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: RTB.Blazor.Styled.Helper.SizeExpression.op_Division*
    name: /
    href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_op_Division_RTB_Blazor_Styled_Helper_SizeExpression_System_Int32_
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: RTB.Blazor.Styled.Helper.SizeExpression.ToString*
  commentId: Overload:RTB.Blazor.Styled.Helper.SizeExpression.ToString
  href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_ToString
  name: ToString
  nameWithType: SizeExpression.ToString
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.ToString
- uid: RTB.Blazor.Styled.Helper.SizeExpression.Render*
  commentId: Overload:RTB.Blazor.Styled.Helper.SizeExpression.Render
  href: RTB.Blazor.Styled.Helper.SizeExpression.html#RTB_Blazor_Styled_Helper_SizeExpression_Render
  name: Render
  nameWithType: SizeExpression.Render
  fullName: RTB.Blazor.Styled.Helper.SizeExpression.Render

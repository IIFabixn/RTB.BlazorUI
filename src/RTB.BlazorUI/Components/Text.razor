@using RTB.BlazorUI.Services.Theme.Styles
@inherits RTBComponent

@code {
    public enum TextAlign { Left, Center, Right }

    [Parameter] public RenderFragment ChildContent { get; set; } = default!;

    [Parameter] public TextStyle? TextStyle { get; set; }

    [Parameter] public string Element { get; set; } = "p";
    [Parameter] public TextAlign? Align { get; set; }
    [Parameter] public string? FontSize { get; set; }
    [Parameter] public string? FontWeight { get; set; }
    [Parameter] public string? LineHeight { get; set; }
    [Parameter] public string? TextDecoration { get; set; }
    [Parameter] public RTBColor? Color { get; set; }

    private string ToCss(TextAlign? align)
    {
        return align switch
        {
            TextAlign.Left => "left",
            TextAlign.Center => "center",
            TextAlign.Right => "right",
            _ => "left"
        };
    }
}

<Styled Context="ComponentClass">
    <PreStyled Style="@TextStyle" />
    <Other Property="text-align" Value="@ToCss(Align)" />
    <Other Property="font-size" Value="@FontSize" />
    <Other Property="font-weight" Value="@FontWeight" />
    <Other Property="line-height" Value="@LineHeight" />
    <Other Property="text-decoration" Value="@TextDecoration" />
    <Color Value="@Color" />

    <p class="@($"{ComponentClass} {Class}")">
        @ChildContent
    </p>
    
</Styled>

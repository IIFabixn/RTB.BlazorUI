@using RTB.Blazor.UI.Styles

@inherits RTBComponent

@code {
    [Parameter] public string? LabelClass { get; set; }
    [Parameter] public RenderFragment? LabelContent { get; set; }

    [Parameter] public string? LabelText { get; set; }
    [Parameter] public TextStyle? LabelTextStyle { get; set; }

    [Parameter] public string? InputClass { get; set; }
    [Parameter] public RenderFragment<bool>? CustomCheckbox { get; set; }

    [Parameter] public bool On { get; set; } = false;
    [Parameter] public EventCallback<bool> OnChecked { get; set; }

    [Parameter] public string InputId { get; set; } = $"rtb-switch-{Guid.NewGuid().ToString("N").Substring(8)}";

    [Parameter] public Position LabelPosition { get; set; } = Position.Top;

    [Parameter] public bool ReadOnly { get; set; } = false;

    [Parameter] public RTBColor OffBackgroundColor { get; set; } = RTBColors.Gray;
    [Parameter] public RTBColor OnBackgroundColor { get; set; } = RTBColors.Green;

    [Parameter] public RTBColor? ThumbColor { get; set; } = RTBColors.White;

    public void Toggle()
    {
        if (ReadOnly) return;
        if (OnChecked.HasDelegate) OnChecked.InvokeAsync(!On);
    }
}

<Styled Context="SwitchClass">
    <Positioned Position="@Positioned.PositionMode.Relative" />
    <Other Property="cursor" Value="pointer" />

    <Background Color="@OffBackgroundColor" />

    <Selector Query=":has(input:checked)">
        <Background Color="@OnBackgroundColor" />
    </Selector>
    
    <label for="@InputId" class="rtb-switch @SwitchClass">
        <Styled Context="InputClass">
            <input id="InputId" class="@InputClass" hidden type="checkbox" readonly="@ReadOnly" @bind-value="On">
        </Styled>

        <Styled Context="SliderClass">
            <Positioned Position="@Positioned.PositionMode.Absolute" Top="0" Right="0" Bottom="0" Left="0" />
            <Background Color="@ThumbColor" />

            <Border Radius="@SizeUnit.Percent(50)" Corner="@Border.BorderCorner.All" />

            <Selector Query="@PseudoElement.Before">
                <Positioned Position="@Positioned.PositionMode.Absolute" Left="4" Bottom="4" Top="4" />
                <Other Property="content" Value="''" /> 
                <Size Width="26" Height="26" />
                <Background Color="@ThumbColor" />
                <Border Radius="@SizeUnit.Percent(50)" Corner="@Border.BorderCorner.All" />
            </Selector>

            <span class="SliderClass"></span>
        </Styled>
    </label>
</Styled>
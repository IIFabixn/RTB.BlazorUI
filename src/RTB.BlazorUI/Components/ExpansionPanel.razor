@using RTB.Blazor.UI.Extensions
@inherits RTBComponent

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public RenderFragment? CollapseContent { get; set; }

    [Parameter]
    public bool InitialExpanded { get; set; } = false;

    [Parameter]
    public EventCallback<bool>? ExpandedChanged { get; set; }
}

@ChildContent
    
@if(IsExpanded)
{
    @CollapseContent
}

@code{
    private bool _expanded = false;
    public bool IsExpanded
    {
        get => _expanded;
        set
        {
            SetProperty(ref _expanded, value);
            ExpandedChanged?.InvokeAsync(IsExpanded);
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender) IsExpanded = InitialExpanded;
    }

    public void Toggle() => IsExpanded = !IsExpanded;
    public void Open() => IsExpanded = true;
    public void Close() => IsExpanded = false;
}

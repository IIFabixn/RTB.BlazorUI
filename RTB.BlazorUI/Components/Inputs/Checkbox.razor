@using RTB.BlazorUI.Styles

@inherits RTBComponent

@code {
    [Parameter] public string? LabelText { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }

    [Parameter] public bool Checked { get; set; } = false;
    [Parameter] public EventCallback<bool> CheckedChanged { get; set; }

    private readonly string InputId = $"checkbox-{Guid.NewGuid().ToString("N").Substring(8)}";

    private Task Toggle() => CheckedChanged.HasDelegate ? CheckedChanged.InvokeAsync(!Checked) : Task.CompletedTask;

    private Task HandleKey(KeyboardEventArgs e) => (e.Key == " " || e.Key == "Enter") ? Toggle() : Task.CompletedTask;
}

<div
    role="checkbox"
    tabindex="0"
    aria-checked="@Checked"
    class="@CombineClass("rtb-checkbox", Checked ? "is-on":null, Class)"
    @onclick:preventDefault
    @onclick="Toggle"
    @onkeydown="HandleKey">
    <span class="indicator"></span>
    @ChildContent
    @if (!string.IsNullOrEmpty(LabelText))
    {
        <Text>@LabelText</text>
    }
</div>
